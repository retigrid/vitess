apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  generation: 1
  labels:
    app: vitess
    component: orchestrator
  name: orchestrator
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/orchestrator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vitess
      component: orchestrator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[{"name":"init-mysql","image":"vitess/orchestrator:latest","command":["bash","-c","
          set -ex\n rm -rf /mnt/data/lost+found\n if [[ ! -d /mnt/data/mysql ]]; then\n
          cp -R /var/lib/mysql/* /mnt/data/\n fi\n chown -R mysql:mysql /mnt/data\n
          "],"resources":{},"volumeMounts":[{"name":"data","mountPath":"/mnt/data"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}]'
        pod.beta.kubernetes.io/init-containers: '[{"name":"init-mysql","image":"vitess/orchestrator:latest","command":["bash","-c","
          set -ex\n rm -rf /mnt/data/lost+found\n if [[ ! -d /mnt/data/mysql ]]; then\n
          cp -R /var/lib/mysql/* /mnt/data/\n fi\n chown -R mysql:mysql /mnt/data\n
          "],"resources":{},"volumeMounts":[{"name":"data","mountPath":"/mnt/data"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}]'
      creationTimestamp: null
      labels:
        app: vitess
        component: orchestrator
    spec:
      containers:
      - command:
        - bash
        - -c
        - |
          set -x
          until mysqladmin -h 127.0.0.1 ping; do sleep 1; done
          exec orchestrator http
        image: vitess/orchestrator:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: orchestrator
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /orc/conf
          name: config
      - command:
        - mysqld
        image: vitess/orchestrator:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: mysql
        resources:
          limits:
            cpu: 100m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: data
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - bash
        - -c
        - " set -ex\n rm -rf /mnt/data/lost+found\n if [[ ! -d /mnt/data/mysql ]];
          then\n cp -R /var/lib/mysql/* /mnt/data/\n fi\n chown -R mysql:mysql /mnt/data\n "
        image: vitess/orchestrator:latest
        imagePullPolicy: IfNotPresent
        name: init-mysql
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/data
          name: data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: orchestrator
        name: config
      - emptyDir: {}
        name: data
status: {}
